@model Group4_iCAREAPP.Models.PatientRecord

@{
    ViewBag.Title = "Create";
}

<h2>Create Patient Record</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.ID) *
        </label>
        <!-- @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Name *
        </label>
        <!-- @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Address
        </label>
        <!-- @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Date of Birth
        </label>
        <!-- @Html.LabelFor(model => model.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Weight
        </label>
        <!-- @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Height
        </label>
        <!-- @Html.LabelFor(model => model.height, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Blood Type
        </label>
        <!-- @Html.LabelFor(model => model.bloodGroup, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.bloodGroup, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bloodGroup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Bed ID
        </label>
        <!-- @Html.LabelFor(model => model.bedID, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.bedID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bedID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Treatment Area
        </label>
        <!-- @Html.LabelFor(model => model.treatmentArea, htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.EditorFor(model => model.treatmentArea, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.treatmentArea, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Geographical Unit
        </label>
        <!-- @Html.LabelFor(model => model.geographicalUnit, "geographicalUnit", htmlAttributes: new { @class = "control-label col-md-2" }) -->
        <div class="col-md-10">
            @Html.DropDownList("geographicalUnit", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.geographicalUnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Document ID *
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.docID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.docID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <h2></h2>
            <input type="submit" value="Submit" style="background-color: cornflowerblue; color: floralwhite; font-size: 16px; border-radius: 10px" class="button" />
            <button type="button" onclick="location.href='@Url.Action("Index", "iCAREBoard")'">Back</button>
        </div>
    </div>
</div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
